- Scenes can be for anything

- There can be multipe scenes running in the same game simultaneously

- A title screen for a game, for example, could be a scene. As could be a menu
  and other things such as that

- It is easy to imagine as one scene for the menu, one for the game and one for
  the map

- Scenes can all communicate between each other while having their other
  concerns separated

- Each scene can have its own file, making code easier to manage

- Scenes follow the standard practice of 4 optional functions - init, preload,
  create and update (looper function)

- In the configuration, scenes must be specified in an array to the `scene` key

- `this.scene.start(Str)` is how another scene is started from an existing one

- Spritesheets are more expensive in processing than images in Phaser, thus,
  whenever not required, make use of images than sprites

- Its best to avoid using parallax effects liberally as that can be annoying
  for the users

- The collider function takes a function callback as a parameter and can
  optionally be supplied with the previous parameters in it to act on what
  happens on collision

- `overlap` is what is used when you don't want a physics reaction, it only
  sees if two objects are touching, it does not simulate its physics

- Phaser has a built in function to interpret and insert bitmap fonts with an
  XML that you supply to the preloading function

- 

